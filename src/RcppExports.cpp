// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// call_oligo_tm
NumericVector call_oligo_tm(CharacterVector oligos, double mv, double dv, double dntp, double dna, int tp, int sc);
RcppExport SEXP primer3_call_oligo_tm(SEXP oligosSEXP, SEXP mvSEXP, SEXP dvSEXP, SEXP dntpSEXP, SEXP dnaSEXP, SEXP tpSEXP, SEXP scSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type oligos(oligosSEXP);
    Rcpp::traits::input_parameter< double >::type mv(mvSEXP);
    Rcpp::traits::input_parameter< double >::type dv(dvSEXP);
    Rcpp::traits::input_parameter< double >::type dntp(dntpSEXP);
    Rcpp::traits::input_parameter< double >::type dna(dnaSEXP);
    Rcpp::traits::input_parameter< int >::type tp(tpSEXP);
    Rcpp::traits::input_parameter< int >::type sc(scSEXP);
    rcpp_result_gen = Rcpp::wrap(call_oligo_tm(oligos, mv, dv, dntp, dna, tp, sc));
    return rcpp_result_gen;
END_RCPP
}
// call_seq_tm
NumericVector call_seq_tm(CharacterVector oligos, double mv, double dv, double dntp, double dna, int nn_max_len, int tp, int sc);
RcppExport SEXP primer3_call_seq_tm(SEXP oligosSEXP, SEXP mvSEXP, SEXP dvSEXP, SEXP dntpSEXP, SEXP dnaSEXP, SEXP nn_max_lenSEXP, SEXP tpSEXP, SEXP scSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type oligos(oligosSEXP);
    Rcpp::traits::input_parameter< double >::type mv(mvSEXP);
    Rcpp::traits::input_parameter< double >::type dv(dvSEXP);
    Rcpp::traits::input_parameter< double >::type dntp(dntpSEXP);
    Rcpp::traits::input_parameter< double >::type dna(dnaSEXP);
    Rcpp::traits::input_parameter< int >::type nn_max_len(nn_max_lenSEXP);
    Rcpp::traits::input_parameter< int >::type tp(tpSEXP);
    Rcpp::traits::input_parameter< int >::type sc(scSEXP);
    rcpp_result_gen = Rcpp::wrap(call_seq_tm(oligos, mv, dv, dntp, dna, nn_max_len, tp, sc));
    return rcpp_result_gen;
END_RCPP
}
// is_thal_init
int is_thal_init();
RcppExport SEXP primer3_is_thal_init() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(is_thal_init());
    return rcpp_result_gen;
END_RCPP
}
// call_thal_init
int call_thal_init(CharacterVector config_path);
RcppExport SEXP primer3_call_thal_init(SEXP config_pathSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type config_path(config_pathSEXP);
    rcpp_result_gen = Rcpp::wrap(call_thal_init(config_path));
    return rcpp_result_gen;
END_RCPP
}
// call_thal_free
void call_thal_free();
RcppExport SEXP primer3_call_thal_free() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    call_thal_free();
    return R_NilValue;
END_RCPP
}
// call_thal
List call_thal(CharacterVector oligo1, CharacterVector oligo2, int debug, int alignment_type, int maxloop, double mv, double dv, double dntp, double dna, double temp, int temp_only, int dimer, int print_output);
RcppExport SEXP primer3_call_thal(SEXP oligo1SEXP, SEXP oligo2SEXP, SEXP debugSEXP, SEXP alignment_typeSEXP, SEXP maxloopSEXP, SEXP mvSEXP, SEXP dvSEXP, SEXP dntpSEXP, SEXP dnaSEXP, SEXP tempSEXP, SEXP temp_onlySEXP, SEXP dimerSEXP, SEXP print_outputSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type oligo1(oligo1SEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type oligo2(oligo2SEXP);
    Rcpp::traits::input_parameter< int >::type debug(debugSEXP);
    Rcpp::traits::input_parameter< int >::type alignment_type(alignment_typeSEXP);
    Rcpp::traits::input_parameter< int >::type maxloop(maxloopSEXP);
    Rcpp::traits::input_parameter< double >::type mv(mvSEXP);
    Rcpp::traits::input_parameter< double >::type dv(dvSEXP);
    Rcpp::traits::input_parameter< double >::type dntp(dntpSEXP);
    Rcpp::traits::input_parameter< double >::type dna(dnaSEXP);
    Rcpp::traits::input_parameter< double >::type temp(tempSEXP);
    Rcpp::traits::input_parameter< int >::type temp_only(temp_onlySEXP);
    Rcpp::traits::input_parameter< int >::type dimer(dimerSEXP);
    Rcpp::traits::input_parameter< int >::type print_output(print_outputSEXP);
    rcpp_result_gen = Rcpp::wrap(call_thal(oligo1, oligo2, debug, alignment_type, maxloop, mv, dv, dntp, dna, temp, temp_only, dimer, print_output));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"primer3_call_oligo_tm", (DL_FUNC) &primer3_call_oligo_tm, 7},
    {"primer3_call_seq_tm", (DL_FUNC) &primer3_call_seq_tm, 8},
    {"primer3_is_thal_init", (DL_FUNC) &primer3_is_thal_init, 0},
    {"primer3_call_thal_init", (DL_FUNC) &primer3_call_thal_init, 1},
    {"primer3_call_thal_free", (DL_FUNC) &primer3_call_thal_free, 0},
    {"primer3_call_thal", (DL_FUNC) &primer3_call_thal, 13},
    {NULL, NULL, 0}
};

RcppExport void R_init_primer3(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
